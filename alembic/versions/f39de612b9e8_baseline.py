"""baseline

Revision ID: f39de612b9e8
Revises: 
Create Date: 2025-09-30 23:00:21.738210

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f39de612b9e8'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('DatabaseMetaSource',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('Name', sa.Text(), nullable=False),
    sa.Column('ConnectionString', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('Id'),
    sa.UniqueConstraint('Name')
    )
    op.create_table('LLMProvider',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('CommonName', sa.Text(), nullable=False),
    sa.Column('LangChainName', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('OutcomeType',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('Name', sa.Text(), nullable=False),
    sa.Column('IsFile', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('SourceType',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('Name', sa.Text(), nullable=False),
    sa.Column('IsSlow', sa.Boolean(), nullable=False),
    sa.Column('IsFile', sa.Boolean(), nullable=False),
    sa.Column('IsMulti', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('StorageType',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('Id'),
    sa.UniqueConstraint('Name')
    )
    op.create_table('Workflow',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('Id'),
    sa.UniqueConstraint('Name')
    )
    op.create_table('FormField',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('WorkflowId', sa.Integer(), nullable=False),
    sa.Column('FieldType', sa.Text(), nullable=False),
    sa.Column('FieldName', sa.Text(), nullable=False),
    sa.Column('FieldLabel', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['WorkflowId'], ['Workflow.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('LLM',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('ProviderId', sa.Integer(), nullable=False),
    sa.Column('ModelName', sa.Text(), nullable=False),
    sa.Column('BaseURL', sa.Text(), nullable=True),
    sa.Column('APIKey', sa.Text(), nullable=True),
    sa.Column('SystemPrompt', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['ProviderId'], ['LLMProvider.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('StorageInstance',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('StorageTypeId', sa.Integer(), nullable=False),
    sa.Column('LocalPath', sa.Text(), nullable=True),
    sa.Column('RemotePath', sa.Text(), nullable=True),
    sa.Column('TopLevel', sa.Text(), nullable=True),
    sa.Column('URL', sa.Text(), nullable=True),
    sa.Column('Username', sa.Text(), nullable=True),
    sa.Column('Password', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['StorageTypeId'], ['StorageType.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('WorkflowInstance',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('WorkflowId', sa.Integer(), nullable=False),
    sa.Column('StartTime', sa.Numeric(), nullable=True),
    sa.Column('EndTime', sa.Text(), nullable=True),
    sa.Column('Status', sa.Text(), nullable=False),
    sa.Column('Data', sa.Text(), nullable=True),
    sa.Column('Step', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['WorkflowId'], ['Workflow.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('FileTemplate',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('StorageInstanceId', sa.Integer(), nullable=False),
    sa.Column('Location', sa.Text(), nullable=True),
    sa.Column('Bucket', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['StorageInstanceId'], ['StorageInstance.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('Outcome',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('WorkflowId', sa.Integer(), nullable=False),
    sa.Column('OutcomeTypeId', sa.Integer(), nullable=False),
    sa.Column('FileUpload', sa.Boolean(), nullable=False),
    sa.Column('FilterField', sa.Text(), nullable=True),
    sa.Column('FilterValue', sa.Text(), nullable=True),
    sa.Column('Name', sa.Text(), nullable=True),
    sa.Column('ParentOutcomeId', sa.Integer(), nullable=True),
    sa.Column('DocumentOrder', sa.Integer(), nullable=True),
    sa.Column('InputFileTemplateId', sa.Integer(), nullable=True),
    sa.Column('OutputFileTemplateId', sa.Integer(), nullable=True),
    sa.Column('DownloadName', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['InputFileTemplateId'], ['FileTemplate.Id'], ),
    sa.ForeignKeyConstraint(['OutcomeTypeId'], ['OutcomeType.Id'], ),
    sa.ForeignKeyConstraint(['OutputFileTemplateId'], ['FileTemplate.Id'], ),
    sa.ForeignKeyConstraint(['WorkflowId'], ['Workflow.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('Source',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('WorkflowId', sa.Integer(), nullable=False),
    sa.Column('TypeId', sa.Integer(), nullable=False),
    sa.Column('FileTemplateId', sa.Integer(), nullable=True),
    sa.Column('DatabaseId', sa.Integer(), nullable=True),
    sa.Column('SQLText', sa.Text(), nullable=True),
    sa.Column('Splitter', sa.Integer(), nullable=False),
    sa.Column('FieldName', sa.Text(), nullable=True),
    sa.Column('Step', sa.Integer(), nullable=False),
    sa.Column('KeyField', sa.Text(), nullable=True),
    sa.Column('ValueField', sa.Text(), nullable=True),
    sa.Column('Orientation', sa.Text(), nullable=True),
    sa.Column('Name', sa.Text(), nullable=True),
    sa.Column('SheetName', sa.Text(), nullable=True),
    sa.Column('HeaderRow', sa.Integer(), nullable=True),
    sa.Column('LLMId', sa.Integer(), nullable=True),
    sa.Column('LLMPromptTemplate', sa.Text(), nullable=True),
    sa.Column('LLMSystemPrompt', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['DatabaseId'], ['DatabaseMetaSource.Id'], ),
    sa.ForeignKeyConstraint(['FileTemplateId'], ['FileTemplate.Id'], ),
    sa.ForeignKeyConstraint(['LLMId'], ['LLM.Id'], ),
    sa.ForeignKeyConstraint(['TypeId'], ['SourceType.Id'], ),
    sa.ForeignKeyConstraint(['WorkflowId'], ['Workflow.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('OutcomeInstance',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('OutcomeId', sa.Integer(), nullable=False),
    sa.Column('InstanceId', sa.Integer(), nullable=False),
    sa.Column('Status', sa.Text(), nullable=False),
    sa.Column('RenderedName', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['InstanceId'], ['WorkflowInstance.Id'], ),
    sa.ForeignKeyConstraint(['OutcomeId'], ['Outcome.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('SQLFields',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('SourceId', sa.Integer(), nullable=False),
    sa.Column('FieldName', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['SourceId'], ['Source.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('SourceInstance',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('SourceId', sa.Integer(), nullable=False),
    sa.Column('InstanceId', sa.Integer(), nullable=False),
    sa.Column('Status', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['InstanceId'], ['WorkflowInstance.Id'], ),
    sa.ForeignKeyConstraint(['SourceId'], ['Source.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('SourceInstance')
    op.drop_table('SQLFields')
    op.drop_table('OutcomeInstance')
    op.drop_table('Source')
    op.drop_table('Outcome')
    op.drop_table('FileTemplate')
    op.drop_table('WorkflowInstance')
    op.drop_table('StorageInstance')
    op.drop_table('LLM')
    op.drop_table('FormField')
    op.drop_table('Workflow')
    op.drop_table('StorageType')
    op.drop_table('SourceType')
    op.drop_table('OutcomeType')
    op.drop_table('LLMProvider')
    op.drop_table('DatabaseMetaSource')
    # ### end Alembic commands ###
